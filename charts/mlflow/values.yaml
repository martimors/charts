# Default values for mlflow.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# Add description annotations according to https://github.com/norwoodj/helm-docs
# Re-generate readme using helm-docs

# -- Number of replicas of mlflow server to run
replicaCount: 1

image:
  # -- Image to use for deploying, must support ENTRYPOINT[ "mlflow", "server" ]
  repository: dingobar/mlflow
  # -- See [the kubernetes docs](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)
  pullPolicy: IfNotPresent
  # -- Tag of the image to use
  tag: "1.27.0-3.10-slim-bullseye"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

backendStore:
  # -- The [SQLAlchemy URI](https://docs.sqlalchemy.org/en/14/core/engines.html#database-urls) of the backend store to use (if sqlite is chosen, it is auto-created in the container and does not persist)
  backendStoreUri: file:///opt/mlflow/mlruns
  # -- Existing secret name and key to get the backendStoreUri from (name: foo, key: bar)
  backendStoreUriExistingSecret: ~

artifactStore:
  # -- Where to write/read artifacts, see the mlflow docs for options. Recommended to use S3 or S3 compatible blob storage. If left blank, artifacts are saved locally in the image and not persisted.
  defaultArtifactRoot: ""
  # -- If you use a non-AWS S3 host such as MinIO, specify the URI here
  s3EndpointUrl: ""

prometheus:
  # -- If `true`, prometheus metrics are exposed on /metrics
  expose: false

# -- Extra environment variables to include in the mlflow pods, in the form of key: value pairs (for example, `FOO: bar`)
extraEnv: {}

# -- Extra secrets or configmaps to get env-variables from
extraEnvFrom: ~
# - configMapRef:
#     name: my-configmap
# - secretRef:
#     name: my-secret

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Extra annotations for all pods
podAnnotations: {}

# -- Extra labels to add to all resources
podLabels: {}

# -- Security context for the pods. The default container can run as any user/group and does not run with elevated access
podSecurityContext: {}

# -- Security context for the individual containers. Take presedence over podSecurityContext.
securityContext: {}

service:
  # -- See [the Kubernetes docs](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types)
  type: ClusterIP
  # -- Port for the service, container and mlflow process (passed to mlflow server --port)
  port: 5000

ingress:
  # -- Whether or not an Ingress resource is created (only the `networking.k8s.io/v1` API is supported)
  create: false
  # -- Ingress annotations in the form of key: value
  annotations: {}

  # -- List of hosts in the form [{name: foo}, {name: bar, tls: {enabled: true, secretName: my-secret}}, ...]
  hosts: []
  # - name: ""
  #   tls:
  #     # Enable TLS termination for the flower Ingress
  #     enabled: false
  #     # the name of a pre-created Secret containing a TLS private key and certificate
  #     secretName: ""

  # -- Ingress path
  path: /
  # -- Ingress path type, see [the Kubernetes docs](https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types) for possible values
  pathType: Prefix

# -- Resource limits and requests for the mlflow pods
resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- See [the Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
nodeSelector: {}

# -- See [the Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
tolerations: []

# -- See [the Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity)
affinity: {}

# Values for subcharts
# Set enabled=false if you don't want to use them
# If you need to customize the values of the subcharts, you can do that here
minio:
  # -- Whether to deploy the MinIO subchart (recommend using external S3 such as AWS S3 in production)
  enabled: true
  defaultBuckets: mlflow
  persistence:
    enabled: false
  auth:
    rootUser: mlflow-key
    rootPassword: mlflow-secret
postgresql:
  # -- Whether to deploy the PostgreSQL subchart (highly recommended to use a managed database service such as AWS RDS in production)
  enabled: true
  auth:
    username: mlflow
    password: mlflow
    database: mlflow
